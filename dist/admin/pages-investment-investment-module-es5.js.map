{"version":3,"sources":["src/app/pages/investment/components/finance-page/finance-page.component.html","src/app/pages/investment/components/financial-statement-form/financial-statement-form.component.html","src/app/pages/investment/components/financial-statement/financial-statement.component.html","src/app/pages/investment/components/income-statement-form/income-statement-form.component.html","src/app/pages/investment/components/income-statement/income-statement.component.html","src/app/pages/investment/components/investment-page/investment-page.component.html","../ust/src/lib/entities/finance/finance.query.ts","../ust/src/lib/entities/finance/finance.service.ts","../ust/src/lib/entities/finance/finance.store.ts","../ust/src/lib/entities/finance/types.ts","src/app/pages/investment/components/finance-page/finance-page.component.scss","src/app/pages/investment/components/finance-page/finance-page.component.ts","src/app/pages/investment/components/financial-statement-form/financial-statement-form.component.scss","src/app/pages/investment/components/financial-statement-form/financial-statement-form.component.ts","src/app/pages/investment/components/financial-statement/financial-statement.component.scss","src/app/pages/investment/components/financial-statement/financial-statement.component.ts","src/app/pages/investment/components/income-statement-form/income-statement-form.component.scss","src/app/pages/investment/components/income-statement-form/income-statement-form.component.ts","src/app/pages/investment/components/income-statement/income-statement.component.scss","src/app/pages/investment/components/income-statement/income-statement.component.ts","src/app/pages/investment/components/investment-page/investment-page.component.scss","src/app/pages/investment/components/investment-page/investment-page.component.ts","src/app/pages/investment/investment-routing.module.ts","src/app/pages/investment/investment.module.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<div class=\\\"detail-box\\\">\\r\\n  <mat-tab-group>\\r\\n    <mat-tab>\\r\\n      <ng-template mat-tab-label>{{ categories[0] }}</ng-template>\\r\\n      <ust-income-statement></ust-income-statement>\\r\\n    </mat-tab>\\r\\n\\r\\n    <mat-tab>\\r\\n      <ng-template mat-tab-label>{{ categories[1] }}</ng-template>\\r\\n      <ust-financial-statement></ust-financial-statement>\\r\\n    </mat-tab>\\r\\n  </mat-tab-group>\\r\\n</div>\\r\\n\"","export default \"<form [formGroup]=\\\"formGroup\\\">\\r\\n  <h4>재무상태표</h4>\\r\\n\\r\\n  <ng-container formArrayName=\\\"financialStatementData\\\">\\r\\n      <ng-container *ngFor=\\\"let row of financialStatementData.controls; index as i\\\" [formGroupName]=\\\"i\\\">\\r\\n      <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"16px\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n        <mat-form-field class=\\\"form-field\\\"  fxFlex=\\\"10%\\\">\\r\\n          <h5>연도</h5>\\r\\n          <input matInput formControlName=\\\"year\\\" type=\\\"number\\\">\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field class=\\\"form-field\\\" fxFlex=\\\"30%\\\">\\r\\n          <h5>자산총계</h5>\\r\\n          <input matInput formControlName=\\\"totalAssets\\\" type=\\\"number\\\">\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field class=\\\"form-field\\\" fxFlex=\\\"30%\\\">\\r\\n          <h5>부채총계</h5>\\r\\n          <input matInput formControlName=\\\"totalLiabilities\\\" type=\\\"number\\\">\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field class=\\\"form-field\\\" fxFlex=\\\"30%\\\">\\r\\n          <h5>자본총계</h5>\\r\\n          <input matInput formControlName=\\\"totalCapital\\\" type=\\\"number\\\">\\r\\n        </mat-form-field>\\r\\n\\r\\n        <button mat-icon-button type=\\\"button\\\" (click)=\\\"deleteRow(i)\\\">\\r\\n          <mat-icon>clear</mat-icon>\\r\\n        </button>\\r\\n      </div>\\r\\n    </ng-container>\\r\\n  </ng-container>\\r\\n\\r\\n  <button class=\\\"button\\\" mat-flat-button color=\\\"primary\\\" (click)=\\\"increaseRow()\\\">+ 행추가</button>\\r\\n</form>\\r\\n\"","export default \"<div class=\\\"detail-content\\\">\\r\\n  <ust-financial-statement-form\\r\\n    [doc]=\\\"financialStatement\\\"\\r\\n    (valueChange)=\\\"formValue = $event\\\"\\r\\n    (statusChange)=\\\"invalid = $event !== 'VALID'\\\"\\r\\n  ></ust-financial-statement-form>\\r\\n\\r\\n  <div class=\\\"action-box\\\">\\r\\n    <button\\r\\n      *ngIf=\\\"financialStatement\\\"\\r\\n      class=\\\"button\\\"\\r\\n      mat-flat-button color=\\\"primary\\\"\\r\\n      (click)=\\\"modify()\\\"\\r\\n      [disabled]=\\\"invalid || isLoading\\\"\\r\\n      type=\\\"button\\\"\\r\\n    >수정</button>\\r\\n\\r\\n    <button\\r\\n      *ngIf=\\\"!financialStatement\\\"\\r\\n      class=\\\"button\\\"\\r\\n      mat-flat-button color=\\\"primary\\\"\\r\\n      (click)=\\\"add()\\\"\\r\\n      [disabled]=\\\"invalid || isLoading\\\"\\r\\n      type=\\\"button\\\"\\r\\n    >등록</button>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"<form [formGroup]=\\\"formGroup\\\">\\r\\n  <h4>손익 계산서</h4>\\r\\n\\r\\n  <ng-container formArrayName=\\\"incomeStatementData\\\">\\r\\n    <ng-container *ngFor=\\\"let row of incomeStatementData.controls; index as i\\\" [formGroupName]=\\\"i\\\">\\r\\n      <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"16px\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n        <mat-form-field class=\\\"form-field\\\"  fxFlex=\\\"10%\\\">\\r\\n          <h5>연도</h5>\\r\\n          <input matInput formControlName=\\\"year\\\" type=\\\"number\\\">\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field class=\\\"form-field\\\" fxFlex=\\\"30%\\\">\\r\\n          <h5>매출액</h5>\\r\\n          <input matInput formControlName=\\\"sales\\\" type=\\\"number\\\">\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field class=\\\"form-field\\\" fxFlex=\\\"30%\\\">\\r\\n          <h5>영업이익</h5>\\r\\n          <input matInput formControlName=\\\"operatingProfit\\\" type=\\\"number\\\">\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field class=\\\"form-field\\\" fxFlex=\\\"30%\\\">\\r\\n          <h5>당기순이익</h5>\\r\\n          <input matInput formControlName=\\\"netProfit\\\" type=\\\"number\\\">\\r\\n        </mat-form-field>\\r\\n\\r\\n        <button mat-icon-button type=\\\"button\\\" (click)=\\\"deleteRow(i)\\\">\\r\\n          <mat-icon>clear</mat-icon>\\r\\n        </button>\\r\\n      </div>\\r\\n    </ng-container>\\r\\n  </ng-container>\\r\\n\\r\\n  <button class=\\\"button\\\" mat-flat-button color=\\\"primary\\\" (click)=\\\"increaseRow()\\\">+ 행추가</button>\\r\\n</form>\\r\\n\"","export default \"<div class=\\\"detail-content\\\">\\r\\n  <ust-income-statement-form\\r\\n    [doc]=\\\"incomeStatement\\\"\\r\\n    (valueChange)=\\\"formValue = $event\\\"\\r\\n    (statusChange)=\\\"invalid = $event !== 'VALID'\\\"\\r\\n  ></ust-income-statement-form>\\r\\n\\r\\n  <div class=\\\"action-box\\\">\\r\\n    <button\\r\\n      *ngIf=\\\"incomeStatement\\\"\\r\\n      class=\\\"button\\\"\\r\\n      mat-flat-button color=\\\"primary\\\"\\r\\n      (click)=\\\"modify()\\\"\\r\\n      [disabled]=\\\"invalid || isLoading\\\" type=\\\"button\\\"\\r\\n    >수정</button>\\r\\n\\r\\n    <button\\r\\n      *ngIf=\\\"!incomeStatement\\\"\\r\\n      class=\\\"button\\\"\\r\\n      mat-flat-button color=\\\"primary\\\"\\r\\n      (click)=\\\"add()\\\"\\r\\n      [disabled]=\\\"invalid || isLoading\\\" type=\\\"button\\\"\\r\\n    >등록</button>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"<router-outlet></router-outlet>\\r\\n\"","import { Injectable } from '@angular/core';\r\nimport { DnlFirestoreQuery } from '@dminine/ng-lib';\r\nimport { FinanceState, FinanceStore } from './finance.store';\r\nimport { Finance } from './types';\r\n\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class FinanceQuery extends DnlFirestoreQuery<FinanceState, Finance> {\r\n  constructor(protected store: FinanceStore) {\r\n    super(store);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\nimport { DnlFirestoreService } from '@dminine/ng-lib';\r\nimport { FinanceQuery } from './finance.query';\r\nimport { FinanceStore, FinanceState } from './finance.store';\r\nimport { Finance } from './types';\r\n\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class FinanceService extends DnlFirestoreService<FinanceState, Finance> {\r\n\r\n  constructor(\r\n    protected financeStore: FinanceStore,\r\n    protected financeQuery: FinanceQuery,\r\n    protected afs: AngularFirestore\r\n  ) {\r\n    super(financeStore, financeQuery, afs, 'finances');\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { StoreConfig } from '@datorama/akita';\r\nimport { DnlFirestoreStore, DnlFirestoreState } from '@dminine/ng-lib';\r\nimport { Finance } from './types';\r\n\r\nexport interface FinanceState extends DnlFirestoreState<Finance> {}\r\n\r\n@Injectable({ providedIn: 'root' })\r\n@StoreConfig({ name: 'finance' })\r\nexport class FinanceStore extends DnlFirestoreStore<FinanceState, Finance> {\r\n  constructor() {\r\n    super();\r\n  }\r\n}\r\n","import { DnlFirestoreEntity } from '@dminine/ng-lib';\r\n\r\n\r\nexport interface Finance extends DnlFirestoreEntity {\r\n  category: FinanceCategory;\r\n  incomeStatementData?: IncomeStatementData[];\r\n  financialStatementData?: FinancialStatementData[];\r\n}\r\n\r\nexport enum FinanceCategory {\r\n  손익계산서 = '손익 계산서',\r\n  재무상태표 = '재무상태표'\r\n}\r\n\r\nexport interface IncomeStatementData {\r\n  year: number;\r\n  sales: number;\r\n  netProfit: number;\r\n  operatingProfit: number;\r\n}\r\n\r\nexport interface FinancialStatementData {\r\n  year: number;\r\n  totalAssets: number;\r\n  totalLiabilities: number;\r\n  totalCapital: number;\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9qZWN0cy9hZG1pbi9zcmMvYXBwL3BhZ2VzL2ludmVzdG1lbnQvY29tcG9uZW50cy9maW5hbmNlLXBhZ2UvZmluYW5jZS1wYWdlLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FinanceCategory } from '../../../../../../../ust/src/lib/entities/finance/types';\r\n\r\n@Component({\r\n  selector: 'ust-finance-page',\r\n  templateUrl: './finance-page.component.html',\r\n  styleUrls: ['./finance-page.component.scss']\r\n})\r\nexport class FinancePageComponent implements OnInit {\r\n  categories = Object.keys(FinanceCategory).map(key => FinanceCategory[key]);\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9qZWN0cy9hZG1pbi9zcmMvYXBwL3BhZ2VzL2ludmVzdG1lbnQvY29tcG9uZW50cy9maW5hbmNpYWwtc3RhdGVtZW50LWZvcm0vZmluYW5jaWFsLXN0YXRlbWVudC1mb3JtLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, Input } from '@angular/core';\r\nimport { FormBuilder, Validators, FormArray, FormGroup } from '@angular/forms';\r\nimport { FormGroupBaseComponent } from '@dminine/ng-lib';\r\nimport { FinanceCategory, Finance } from '../../../../../../../ust/src/lib/entities/finance/types';\r\n\r\n@Component({\r\n  selector: 'ust-financial-statement-form',\r\n  templateUrl: './financial-statement-form.component.html',\r\n  styleUrls: ['./financial-statement-form.component.scss']\r\n})\r\nexport class FinancialStatementFormComponent extends FormGroupBaseComponent {\r\n  @Input()\r\n  set value(value: Finance) {\r\n    if (value && value !== this._value) {\r\n      this.initArrayRow(value);\r\n      this.resetForm(this.convertToFormValue(value));\r\n    }\r\n  }\r\n  _value: Finance;\r\n\r\n  formGroup = this.createForm();\r\n  rows: FormArray;\r\n  arrayLength = 1;\r\n\r\n  constructor(\r\n    private fb: FormBuilder\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  get financialStatementData(): FormArray {\r\n    return this.formGroup.get('financialStatementData') as FormArray;\r\n  }\r\n\r\n  increaseRow(): void {\r\n    this.rows = this.financialStatementData;\r\n    this.rows.push(this.createFormGroup());\r\n  }\r\n\r\n  deleteRow(index: number): void {\r\n    this.rows.removeAt(index);\r\n  }\r\n\r\n  private initArrayRow(value: Finance): void {\r\n    if (\r\n      value.financialStatementData &&\r\n      value.financialStatementData.length !== this.financialStatementData.length\r\n    ) {\r\n      for (let i = 0; i < value.financialStatementData.length - this.arrayLength; i++) {\r\n        this.increaseRow();\r\n      }\r\n    }\r\n  }\r\n\r\n  private createForm() {\r\n    return this.fb.group({\r\n      category: [FinanceCategory.재무상태표, Validators.required],\r\n      financialStatementData: this.fb.array(\r\n        new Array(this.arrayLength).fill(true).map(() => this.createFormGroup())\r\n      )\r\n    });\r\n  }\r\n\r\n  private createFormGroup(): FormGroup {\r\n    return this.fb.group({\r\n      year: [null, Validators.required],\r\n      totalAssets: [null, Validators.required],\r\n      totalLiabilities: [null, Validators.required],\r\n      totalCapital: [null, Validators.required],\r\n    });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9qZWN0cy9hZG1pbi9zcmMvYXBwL3BhZ2VzL2ludmVzdG1lbnQvY29tcG9uZW50cy9maW5hbmNpYWwtc3RhdGVtZW50L2ZpbmFuY2lhbC1zdGF0ZW1lbnQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { SubscriptionBaseComponent } from '@dminine/ng-lib';\r\nimport { Subscription } from 'rxjs';\r\nimport { take, finalize } from 'rxjs/operators';\r\nimport { FinanceService } from '../../../../../../../ust/src/lib/entities/finance/finance.service';\r\nimport { Finance, FinanceCategory } from '../../../../../../../ust/src/lib/entities/finance/types';\r\nimport { Notifier } from '../../../../core/services/notifier.service';\r\n\r\n@Component({\r\n  selector: 'ust-financial-statement',\r\n  templateUrl: './financial-statement.component.html',\r\n  styleUrls: ['./financial-statement.component.scss']\r\n})\r\nexport class FinancialStatementComponent extends SubscriptionBaseComponent implements OnInit {\r\n  formValue: Partial<Finance>;\r\n  financialStatement: Finance;\r\n\r\n  invalid = true;\r\n  isLoading = false;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private notifier: Notifier,\r\n    private financeService: FinanceService\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.addSubscription(this.initFinancialStatement());\r\n  }\r\n\r\n  add(): void {\r\n    if (this.invalid) {\r\n      return this.notifier.warning('모든 정보를 입력해 주세요');\r\n    }\r\n\r\n    this.isLoading = true;\r\n\r\n    this.financeService.add(this.formValue).pipe(take(1)).pipe(\r\n      finalize(() => this.isLoading = false)\r\n    ).subscribe(() => {\r\n      this.notifier.success('저장하였습니다!');\r\n    });\r\n  }\r\n\r\n  async modify() {\r\n    if (this.invalid) {\r\n      return this.notifier.warning('모든 정보를 입력해 주세요');\r\n    }\r\n\r\n    this.isLoading = true;\r\n\r\n    try {\r\n      await this.financeService.update(this.financialStatement.id, this.formValue);\r\n      this.notifier.success('수정하였습니다!');\r\n    } catch (err) {\r\n      this.notifier.error(`오류가 발생하였습니다.\\nError: ${err.message}`);\r\n    }\r\n\r\n    this.isLoading = false;\r\n  }\r\n\r\n  private initFinancialStatement(): Subscription {\r\n    return this.financeService.list({\r\n      filters: [{ field: 'category', comparison: '==', value: FinanceCategory.재무상태표 }]\r\n    }).subscribe(finance => {\r\n      this.financialStatement = finance[0];\r\n    });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9qZWN0cy9hZG1pbi9zcmMvYXBwL3BhZ2VzL2ludmVzdG1lbnQvY29tcG9uZW50cy9pbmNvbWUtc3RhdGVtZW50LWZvcm0vaW5jb21lLXN0YXRlbWVudC1mb3JtLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, Input } from '@angular/core';\r\nimport { FormBuilder, Validators, FormGroup, FormArray } from '@angular/forms';\r\nimport { FormGroupBaseComponent } from '@dminine/ng-lib';\r\nimport { FinanceCategory, Finance } from '../../../../../../../ust/src/lib/entities/finance/types';\r\n\r\n@Component({\r\n  selector: 'ust-income-statement-form',\r\n  templateUrl: './income-statement-form.component.html',\r\n  styleUrls: ['./income-statement-form.component.scss']\r\n})\r\nexport class IncomeStatementFormComponent extends FormGroupBaseComponent {\r\n  @Input()\r\n  set value(value: Finance) {\r\n    if (value && value !== this._value) {\r\n      this.initArrayRow(value);\r\n      this.resetForm(this.convertToFormValue(value));\r\n    }\r\n  }\r\n  _value: Finance;\r\n\r\n  formGroup = this.createForm();\r\n  rows: FormArray;\r\n  arrayLength = 1;\r\n\r\n  constructor(\r\n    private fb: FormBuilder\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  get incomeStatementData(): FormArray {\r\n    return this.formGroup.get('incomeStatementData') as FormArray;\r\n  }\r\n\r\n  increaseRow(): void {\r\n    this.rows = this.incomeStatementData;\r\n    this.rows.push(this.createFormGroup());\r\n  }\r\n\r\n  deleteRow(index: number): void {\r\n    this.rows.removeAt(index);\r\n  }\r\n\r\n  private initArrayRow(value: Finance): void {\r\n    if (\r\n      value.incomeStatementData &&\r\n      value.incomeStatementData.length !== this.incomeStatementData.length\r\n    ) {\r\n      for (let i = 0; i < value.incomeStatementData.length - this.arrayLength; i++) {\r\n        this.increaseRow();\r\n      }\r\n    }\r\n  }\r\n\r\n  private createForm() {\r\n    return this.fb.group({\r\n      category: [FinanceCategory.손익계산서, Validators.required],\r\n      incomeStatementData: this.fb.array(\r\n        new Array(this.arrayLength).fill(true).map(() => this.createFormGroup())\r\n      )\r\n    });\r\n  }\r\n\r\n  private createFormGroup(): FormGroup {\r\n    return this.fb.group({\r\n      year: [null, Validators.required],\r\n      sales: [null, Validators.required],\r\n      netProfit: [null, Validators.required],\r\n      operatingProfit: [null, Validators.required]\r\n    });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9qZWN0cy9hZG1pbi9zcmMvYXBwL3BhZ2VzL2ludmVzdG1lbnQvY29tcG9uZW50cy9pbmNvbWUtc3RhdGVtZW50L2luY29tZS1zdGF0ZW1lbnQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { SubscriptionBaseComponent } from '@dminine/ng-lib';\r\nimport { Subscription } from 'rxjs';\r\nimport { take, finalize } from 'rxjs/operators';\r\nimport { FinanceService } from '../../../../../../../ust/src/lib/entities/finance/finance.service';\r\nimport { Finance, FinanceCategory } from '../../../../../../../ust/src/lib/entities/finance/types';\r\nimport { Notifier } from '../../../../core/services/notifier.service';\r\n\r\n@Component({\r\n  selector: 'ust-income-statement',\r\n  templateUrl: './income-statement.component.html',\r\n  styleUrls: ['./income-statement.component.scss']\r\n})\r\nexport class IncomeStatementComponent extends SubscriptionBaseComponent implements OnInit {\r\n  formValue: Partial<Finance>;\r\n  incomeStatement: Finance;\r\n\r\n  invalid = true;\r\n  isLoading = false;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private notifier: Notifier,\r\n    private financeService: FinanceService\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.addSubscription(this.initIncomeStatement());\r\n  }\r\n\r\n  add(): void {\r\n    if (this.invalid) {\r\n      return this.notifier.warning('모든 정보를 입력해 주세요');\r\n    }\r\n\r\n    this.isLoading = true;\r\n\r\n    this.financeService.add(this.formValue).pipe(take(1)).pipe(\r\n      finalize(() => this.isLoading = false)\r\n    ).subscribe(() => {\r\n      this.notifier.success('저장하였습니다!');\r\n    });\r\n  }\r\n\r\n  async modify() {\r\n    if (this.invalid) {\r\n      return this.notifier.warning('모든 정보를 입력해 주세요');\r\n    }\r\n\r\n    this.isLoading = true;\r\n\r\n    try {\r\n      await this.financeService.update(this.incomeStatement.id, this.formValue);\r\n      this.notifier.success('수정하였습니다!');\r\n    } catch (err) {\r\n      this.notifier.error(`오류가 발생하였습니다.\\nError: ${err.message}`);\r\n    }\r\n\r\n    this.isLoading = false;\r\n  }\r\n\r\n  private initIncomeStatement(): Subscription {\r\n    return this.financeService.list({\r\n      filters: [{ field: 'category', comparison: '==', value: FinanceCategory.손익계산서 }]\r\n    }).subscribe(finance => {\r\n      this.incomeStatement = finance[0];\r\n    });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9qZWN0cy9hZG1pbi9zcmMvYXBwL3BhZ2VzL2ludmVzdG1lbnQvY29tcG9uZW50cy9pbnZlc3RtZW50LXBhZ2UvaW52ZXN0bWVudC1wYWdlLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ust-investment-page',\r\n  templateUrl: './investment-page.component.html',\r\n  styleUrls: ['./investment-page.component.scss']\r\n})\r\nexport class InvestmentPageComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { FinancePageComponent } from './components/finance-page/finance-page.component';\r\nimport { InvestmentPageComponent } from './components/investment-page/investment-page.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: InvestmentPageComponent,\r\n    children: [\r\n      { path: 'finance', component: FinancePageComponent },\r\n      { path: '', redirectTo: 'finance', pathMatch: 'full'}\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class InvestmentRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FlexModule } from '@angular/flex-layout';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MaterialModule } from '../../../../../ust/src/lib/modules/material/material.module';\r\n\r\nimport { InvestmentRoutingModule } from './investment-routing.module';\r\nimport { InvestmentPageComponent } from './components/investment-page/investment-page.component';\r\nimport { FinancePageComponent } from './components/finance-page/finance-page.component';\r\nimport { IncomeStatementComponent } from './components/income-statement/income-statement.component';\r\nimport { FinancialStatementComponent } from './components/financial-statement/financial-statement.component';\r\nimport { IncomeStatementFormComponent } from './components/income-statement-form/income-statement-form.component';\r\nimport { FinancialStatementFormComponent } from './components/financial-statement-form/financial-statement-form.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    InvestmentPageComponent,\r\n    FinancePageComponent,\r\n    IncomeStatementComponent,\r\n    FinancialStatementComponent,\r\n    IncomeStatementFormComponent,\r\n    FinancialStatementFormComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    MaterialModule,\r\n    FlexModule,\r\n    ReactiveFormsModule,\r\n    InvestmentRoutingModule\r\n  ]\r\n})\r\nexport class InvestmentPageModule { }\r\n"],"sourceRoot":"webpack:///"}